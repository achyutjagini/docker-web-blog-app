# Environment variables (username & password) required by the mongodb server

#This YAML code defines a Kubernetes Secret object, which can be used to 
#store sensitive information such as a database username and password. In 
#this case, the username and password are both set to "root".

#It's important to note that the data is encoded as base64. The value of 
#mongo-root-username is "root" encoded as base64, which is "cm9vdA==". The'
#same is true for the password.

#It's generally recommended to use a more secure password in a production 
#environment, and to avoid storing the password in clear text in the YAML file. 
#Additionally, you should consider using a secure mechanism to manage your secrets, 
#such as a secret management tool like Hashicorp Vault.

#The type field in this YAML code specifies the type of data that is stored
# in the secret. In this case, the type is set to "Opaque", which means that 
#the data is stored as is, without any encoding or processing. 
#The Kubernetes 
#API server stores and retrieves this data as a simple key-value map, 
#where the keys are defined by the data field.

#The data field is a map that contains the actual key-value pairs for the secret data.
#In this example, there are two key-value pairs: mongo-root-username and mongo-
#root-password. The values for these keys are base64 encoded strings, representing
#the username and password for the MongoDB server, respectively.

apiVersion: v1
kind: Secret
metadata:
  name: secret
type: Opaque
data:
  mongo-root-username: cm9vdA==
  mongo-root-password: cm9vdA==